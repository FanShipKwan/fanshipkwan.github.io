{"meta":{"title":"因缺斯汀","subtitle":null,"description":null,"author":"善能菌","url":"http://yoursite.com"},"pages":[{"title":"","date":"2016-05-22T16:12:47.040Z","updated":"2016-05-22T16:12:47.040Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","keywords":null,"text":"","raw":null,"content":null}],"posts":[{"title":"PANDAS常用手册 II -- 使用 HTML 和 Web API","slug":"PANDAS常用手册-II-使用-HTML-和-Web-API","date":"2016-05-18T15:40:15.569Z","updated":"2016-05-23T14:12:39.510Z","comments":true,"path":"2016/05/18/PANDAS常用手册-II-使用-HTML-和-Web-API/","link":"","permalink":"http://yoursite.com/2016/05/18/PANDAS常用手册-II-使用-HTML-和-Web-API/","excerpt":"一、实验简介 今天的课程比较简单，主要是对上一节课的一些补充。许多网站都有一些通过 JSON 或其他格式提供数据的公共 API。通过 Python 访问这些 API 的办法不少。一个简单易用的办法是 request 包。","keywords":null,"text":"一、实验简介 今天的课程比较简单，主要是对上一节课的一些补充。许多网站都有一些通过 JSON 或其他格式提供数据的公共 API。通过 Python 访问这些 API 的办法不少。一个简单易用的办法是 request 包。 二、使用 HTML 和 Web API GeoNames是一个免费的全球地理数据库。我们可以发送一个 HTTP GET 请求（关于Web API的数据下载，需要在联网情况才能进行。成功购买实验楼会员服务的用户，便可直接在环境中链接外网），如下所示：12345678In [15]: import requestsIn [16]: url = 'http://api.geonames.org/citiesJSON?north=44.1&amp;south=-9.9&amp;east=-22.4&amp;west=55.2&amp;lang=de&amp;username=demo'In [17]: resp = requests.get(url)In [18]: respOut[18]: &lt;Response [200]&gt; Response 对象的 text 属性含有 GET 请求的内容。许多 Web API 返回的都是 JSON 字符串，我们必须将其加载到一个 Python 对象中123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146In [19]: import jsonIn [20]: data = json.loads(resp.text)In [21]: data.keys()Out[21]: [u'geonames']In [22]: dataOut[22]: &#123;u'geonames': [&#123;u'countrycode': u'MX', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 3530597, u'lat': 19.428472427036, u'lng': -99.12766456604, u'name': u'Mexiko-Stadt', u'population': 12294193, u'toponymName': u'Mexico City', u'wikipedia': u'en.wikipedia.org/wiki/Mexico_City'&#125;, &#123;u'countrycode': u'CN', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 1816670, u'lat': 39.9074977414405, u'lng': 116.397228240967, u'name': u'Peking', u'population': 11716620, u'toponymName': u'Beijing', u'wikipedia': u'en.wikipedia.org/wiki/Beijing'&#125;, &#123;u'countrycode': u'PH', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 1701668, u'lat': 14.6042, u'lng': 120.9822, u'name': u'Manila', u'population': 10444527, u'toponymName': u'Manila', u'wikipedia': u'en.wikipedia.org/wiki/Manila'&#125;, &#123;u'countrycode': u'BD', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 1185241, u'lat': 23.710395616597037, u'lng': 90.40743827819824, u'name': u'Dhaka', u'population': 10356500, u'toponymName': u'Dhaka', u'wikipedia': u'en.wikipedia.org/wiki/Dhaka'&#125;, &#123;u'countrycode': u'KR', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 1835848, u'lat': 37.566, u'lng': 126.9784, u'name': u'Seoul', u'population': 10349312, u'toponymName': u'Seoul', u'wikipedia': u'en.wikipedia.org/wiki/Seoul'&#125;, &#123;u'countrycode': u'ID', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 1642911, u'lat': -6.214623197035775, u'lng': 106.84513092041016, u'name': u'Jakarta', u'population': 8540121, u'toponymName': u'Jakarta', u'wikipedia': u'en.wikipedia.org/wiki/Jakarta'&#125;, &#123;u'countrycode': u'JP', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 1850147, u'lat': 35.6895, u'lng': 139.69171, u'name': u'Tokio', u'population': 8336599, u'toponymName': u'Tokyo', u'wikipedia': u'de.wikipedia.org/wiki/Tokyo'&#125;, &#123;u'countrycode': u'TW', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 1668341, u'lat': 25.047763, u'lng': 121.531846, u'name': u'Taipeh', u'population': 7871900, u'toponymName': u'Taipei', u'wikipedia': u'de.wikipedia.org/wiki/Taipei'&#125;, &#123;u'countrycode': u'CO', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 3688689, u'lat': 4.609705849789108, u'lng': -74.08175468444824, u'name': u'Bogot\\xe1', u'population': 7674366, u'toponymName': u'Bogot\\xe1', u'wikipedia': u'en.wikipedia.org/wiki/Bogot%C3%A1'&#125;, &#123;u'countrycode': u'HK', u'fcl': u'P', u'fclName': u'city, village,...', u'fcode': u'PPLC', u'fcodeName': u'capital of a political entity', u'geonameId': 1819729, u'lat': 22.2855225817732, u'lng': 114.157691001892, u'name': u'Hong Kong', u'population': 7012738, u'toponymName': u'Hong Kong', u'wikipedia': u'en.wikipedia.org/wiki/Hong_Kong'&#125;]&#125;In [23]: city_fields = ['countrycode','name','fcode','population']In [24]: citys = DataFrame(data['geonames'],columns=city_fields)In [25]: citysOut[25]: countrycode name fcode population0 MX Mexiko-Stadt PPLC 122941931 CN Peking PPLC 117166202 PH Manila PPLC 104445273 BD Dhaka PPLC 103565004 KR Seoul PPLC 103493125 ID Jakarta PPLC 85401216 JP Tokio PPLC 83365997 TW Taipeh PPLC 78719008 CO Bogotá PPLC 76743669 HK Hong Kong PPLC 7012738 现在，DataFrame 中的每一行就有了来自 GeoNames 的数据：1234567In [26]: citys.ix[5]Out[26]: countrycode IDname Jakartafcode PPLCpopulation 8540121Name: 5, dtype: object 要想能够直接得到便于分析的 DataFrame 对象，只需要再多费些精力创建出对常见 Web API 的更高级接口即可。","raw":null,"content":null,"categories":[],"tags":[{"name":"PYTHON科学计算","slug":"PYTHON科学计算","permalink":"http://yoursite.com/tags/PYTHON科学计算/"}]},{"title":"DOTA职业圈，被黑出翔的那些经典名人名言","slug":"2016-4-23-dotatalking","date":"2016-05-16T14:31:20.465Z","updated":"2016-05-23T14:12:55.402Z","comments":true,"path":"2016/05/16/2016-4-23-dotatalking/","link":"","permalink":"http://yoursite.com/2016/05/16/2016-4-23-dotatalking/","excerpt":"##NO.1 拉谁!说话!拉谁! 出自怒吼天尊XB。 XB在某次比赛中，使用自己擅长的蝙蝠骑士(现已冠名XB骑士)，非常嚣张的嘲讽道：“拉谁!说话!拉谁!” 于是…… 他拉了一个小兵，全世界震惊了。从此XB骑士的美名享誉全球，XB的机智打动了在场的所有人，掌声经久不息","keywords":null,"text":"##NO.1 拉谁!说话!拉谁! 出自怒吼天尊XB。 XB在某次比赛中，使用自己擅长的蝙蝠骑士(现已冠名XB骑士)，非常嚣张的嘲讽道：“拉谁!说话!拉谁!” 于是…… 他拉了一个小兵，全世界震惊了。从此XB骑士的美名享誉全球，XB的机智打动了在场的所有人，掌声经久不息 ##NO.2 给我幽鬼，输了砍手! 出自伊人HAO(砍手HAO) HAO娘刚出道没多久的时候。俗话说，初生牛犊不怕虎，面对强悍的对手，HAO娘自信的要求队友给他PICK幽鬼 ，“输了砍手!” 从此砍手HAO的外号不胫而走。 江湖上盛传，我有上将HAO，可斩ZHOU神! 不过HAO娘随着这几年的成长，越发的成熟，已经成为了最顶级C之一!砍手HAO的美名也逐渐被伊人HAO所代替. ##NO.3 就是在，有时候比赛输了，我会觉得队友不给力。 出自徐志雷(BURNING,大B神,BB) 最近版本变更，加上DK人员调整，以及之前的所谓B神“一踢四”的风波，再加上最近BB的表现不尽如意。让我们的BB站在了风口浪尖，之前在G1冠军联赛上说过的这句话又被很多人拿出来旧事从提~ BB号称是能够1V9的男人，所以输了比赛，当然怪队友不给力咯~ 其实啦，你们如果继续看这个视频，会发现BB之后有说到，“但是，DOTA是5个人的游戏。。。。。。”总而言之，就是输赢是要大家一块承担的意思。 不过，想黑人~断章取义可是最容易的手段哦~ ##NO.4 打个比赛像农民一样! 出自ZHOUZHOU~ 某次比赛，当时的大ZHOU神由于不满XB的无尽嘲讽，为了发泄，说出了这样一句让我大中华广大农民愤慨的话。 结果呢，这句话并没有影响到XB，反而给ZHOUZHOU自己扣上了农民ZHOU的帽子…… 突出一个惨。 ##NO.5 真替狗哥不值! 出自怒吼天尊XB 紧接着NO.4，当ZHOUZHOU不满XB嘲讽进行回敬之后，XB再次使出杀手锏! 当时，XB指着看台反嘲一句：“谁先骂的，昨天比赛是谁骂的狗哥(zhou前队友兄弟，ig合并时被踢出去的三生)，我真替狗哥不值!狗哥，奈斯不奈斯!?” 结果台下竟然一片“nice”回应，ZHOUZHOU嘲讽大败而归。 之后，真替XX不值这句话就成了适用范围极广的一句话。 例如，当YAO接受采访表示要打一直以来暗恋自己的花花(性别未知)的时候，广大网友纷纷表示“真替花花不值!” ##NO.6 来DOTA1不把你打哭? 出自某不知名非职业选手NL_KS 当时我们的NL_KS大神还在90016DOTA1战队，他们的战队名叫GREENDY。由于入驻DOTA2比较晚，(其实就是技不如人。。。。。。)在进行一场DOTA2比赛的时候，惨遭血虐，被广大网友嘲讽。 我们的KS大神按耐不住心中的怒火，一句“来DOTA1不把你打哭?”硬是强行登基!GREENDY成功成为DOTA1宇宙第一强队! 衍生版本，来DOTA1卜把妮打哭(为什么要这么写…懂的自然懂)。 ##NO.7 对不起，这个比赛我要赢。 出自09(牛肉9，大菊观9) 若干年前的SOLO大赛，决赛的对阵双方是09和LONGDD，当09的炼金在河道处击杀了龙DD的小J的时候，09霸气的打出了这样一句话“对不起，这个比赛我要赢。”当然，最终他的确赢得了比赛，获得了冠军。 尽显装B本色，广大网友不服不行，唏嘘不已。 ##NO.8 我又不是最菜的! 再次出自怒吼天尊XB(话题小王子啊，不是我想黑你的) 今年的DK人员大调整，直接让旧DK除BURNING以外的所有人全部离队，作为劣势路抗压，总被网友诟病冲动爱送爱崩盘的XB，在接受一次采访的时候表示，非常不能够接受这样一种被离队的结果，明确表示“我又不是最菜的!” 不过之后XB SAMA的一次次“惊艳”表现再次印证了你就是最菜的那个!(玩笑话，XB就是这么个打法)。 每当XB被各种姿势艹翻的时候，网友们都翻出这句话来，毕竟，不是最菜的。 ##NO.9 我TM又不是SB，我亲自送她上的飞机! 出自PIS(达蒙皮，P神) P神的绿帽事件，我就不再科普了，毕竟公共场合，有伤风化!说多了都是泪。 总而言之，当广大网友将诸多证据摆在PP面前的时候，PP选择在YY直播，做出澄清，对于师母到底飞没飞海南这件事，PP斩钉截铁的表示“我女朋友我还不知道么?我亲自送她上的飞机!我TM又不是SB!”尽显男儿本色，霸气外漏! 不幸的是，仅仅两小时之后，PP就再次回到YY表示，网友的爆料，情况基本属实，绿帽已戴，好聚好散。 ##NO.10 这个比赛白送了! 出自怒吼天尊XB(哥你上镜太多了点吧) 当时的老队长XB已经来到了VG战队，同样打3号位，作为1号位的TUTU，之前表现不佳，不过状态逐渐回升，VG战队越战越勇，不过当TUTU得知自己如果表示不好，可能会被SYLAR换掉的时候，再加上自己家中有急事(记得好像是父亲重病)，无法集中精力比赛，状态不是很好，VG战队在NEST比赛中也失败而归。 而爱冲动的老队长在没有完全了解TUTU情况之下，在微博上说出了这些气话“这个比赛白送了!”认为TUTU是导致VG的落败原因，这个比赛算白送给别人了。 于是我大XB SAMA再次被黑，之后的比赛，一旦VG落败，网友都会在聊天频道调侃“这个比赛白送了!” ##NO.11 不要放海涛切假腿。 出自海涛 海涛作为很多DOTA玩家的启蒙老师，其对DOTA做出的贡献无可厚非，再加上对DOTA2也是极力推广，不可不谓良心涛，虽然他被网友诟病“解说不专业，打的菜，话痨”。不过LZ本人现在对他还是持肯定态度的! 不过，千万，千万，不要放海涛切假腿。假腿就是动力鞋，科普一下，切假腿，是因为动力鞋有三个形态，可以切换。 传说中，当你对面有海涛的时候，必须全场GANK他，不要放海涛打钱，因为，一旦海涛打出假腿的钱，合成了假腿，你们就已经输了。 海涛切起假腿来，APM瞬间可以达到600以上，曾经仅靠一个假腿冰女通过超高频率的切假腿，秒杀6龙心人马，成为一段神话! 其实是海涛在自己的视频中，总是喜欢强调切假腿的妙用，这一个小小的假腿似乎爆发出了不可估量的作用，于是被网友黑出了翔! ##NO.12 我们打比赛从不20投 出自ZHOUZHOU(农民ZHOU，智障ZHOU) 在一次接受采访的时候，记者刁钻的问起了DOTA与LOL的区别，智障ZHOU突然大脑短路，苦思冥想，得出结论，微微一笑“我们打比赛从不20投!” 悲剧的是，就在接下来的比赛之中，由ZHOUZHOU带领的IG，在坚持了16分钟之后，就无奈打出了GG，创造了史无前例的16投的传说!狠狠的自己扇了自己一巴掌。20投也成为了扣在ZHOUZHOU头上一顶摘不下来的帽子。。。。。。 其实呢，ZHOUZHOU后来在微博上澄清，这句话是别人怂恿他说的，并不代表他的观点，不过，WHO CARE? ##NO.13 影魔已经不适合这个版本了。 单车(单车武士) 游戏风云直播，前职业选手单车，打水友局，对面水友霸气的手选了影魔，手选影魔的意思就等于，欠艹，求虐求侮辱，不服来SOLO!这能忍?单车思考了一下，选择了自认为拿手，并且可以针对影魔的神灵武士! 说了一句可能最让他后悔的一句话“我要证明，影魔已经不适合这个版本了。” 结果不到6级，单车的神灵武士就已经连续被对面影魔艹翻几次，看着0杀5死的数据，单车表示“这个Z炮怎么可能压到我?”“我不是那种一崩到底的选手!”接着单车武士继续被杀，继续着他的传说。 旁边的BBC意味深长的说“看来影魔还是挺适合这个版本的吧” 从此神灵武士冠名单车，正式更名为单车武士! ##NO.14 除了B神，其他C都差不多。 出自XIAO8(下面8) 在刚刚结束的WPC-ACE联赛上，LGD战队由于之前SYLAR的赌气离队，找来了小兔几当C，经过短暂的磨合，效果竟然出奇的好，得意于LGD战队的执行力与团结! 一次赛后，作为队长，XIAO8接受采访，主持人问到，LGD的C位变动，有没有导致战术等等方面的连锁变化，又或者这两个不同的C，风格，打法上有什么不同吗?XIAO8想了想，说出了“除了B神，其他C都差不多!” 这句话显然是对B神的认可，B神，代表了C位的标杆。更是对LGD战队的自信，LGD战队可以扶起任何一个C! 不过呢……由于B神最近的低迷表现，这句话又被拿出来赋予了新的含义，即，其他C都差不多，只有B神是最腿的，B神是C位的下限。。。 ##NO.15 我叫战神7，和你一换一! 出自战神7(教练) 战神7的个人能力，看过他打路人的都知道，不用我赘述了，国F几根最粗大腿之一!突出一个虎! 不过正如他的ID(上头猫)，这名选手打起职业来，脑子不是很好使，虽然自己打的中单2号位，却经常做出1V3，1V4的举动(当然跪了)，而且尤其喜欢跟对面的辅助一换一，突出一个谁不服我就跟你一换一! 从此，我叫战神7，和你一换一的美名就传播开了，战神7也迫于压力没有继续打职业，不过他仍然活跃在职业圈，希望大家支持这样有干劲，有能力的选手! ##NO.16 干干干!救救救!阿西吧! 出自宝哥 宝哥是以前老DK战队的5号位，专职辅助B神，老好人，现在没打职业了，在YY90016做直播，有时候会切换成“支付宝”形态，强行“支付”送人头! 大家脑补一下以下场景。 宝哥身先士卒，杀入敌阵，口中喊着“干干干!”，结果发现自己不是B神不能1V9，快要体力不支倒下了，焦急的宝哥大喊“救救救!”，结果队友一看宝哥又切换“支付宝”形态了，毅然选择了放弃宝哥，宝哥终于壮烈牺牲，宝哥长吁一口气“阿西吧!” ##NO.17 我们的猪肉粒含有牛肉成分! 出自09(牛肉9，翔9，偷钱9) 我们都知道著名大忽悠09先森，通过自己在DOTA取得的一定成绩，将自己包装成了一个全民偶像，聪明的09利用自己的名声做起了淘宝生意，食品店那叫一个火爆! 其中很著名的产品就是OX牛肉粒，结果细心的网友调查发现，该牛肉粒根本不是牛肉做的而是猪肉做的!结果却明目张胆的起着牛肉粒的名字! 我大酒神迫于压力站出来辟谣，我们的猪肉粒，是含有牛肉成分的! 至于你信不信，我反正信了! ##NO.18 我就问你满足不满足! 出自XB 某次DK跟TONGFU比赛，线下赛，没有隔音室，双方可以尽情嘲讽。这不正中老队长XB的下怀吗?怒吼天尊不是白叫的，于是XB在比赛中，就让对面明白了。 送!送!送!会不会玩! 杀我，杀我!咬你就是两口! 我就问你满足不满足! 满足不满足! 可怜的香蕉和HAO娘根本没见过这个阵势，直接给吓傻了…… 满足不满足，这句话也成为了嘲讽的必备! 当你打路人艹翻全场的时候，一句，我就问你满足不满足，尽显霸气本色! ##NO.19 打的跟NM要赢了一样! 出自LONGDD(霍比特龙，AKK龙，翔龙，DOUBLE DICK LONG，喝汤龙，长沙赵子龙，吹B龙) 著名单口相声演员LONGDD在90016的单口相声，相信很多吧友都听过。像我们龙神这种混黑社会的，一把砍刀从东边砍到西边，血浮血海的，免不了结了很多仇人。俗话说，常在河边走，哪能不湿鞋! 龙神直播的时候，经常会匹配到自己的仇家，仇人相见，分外眼红，对面经常打的十分凶残，满场干!无奈我大龙神的护龙山庄，高手如云，几大护法武功高强，对面路人也是有心杀贼无力回天!虽然打的很有血性，可惜却仍旧败下阵来! 这时候龙神喝一口汤，嚼一口槟榔，轻蔑的一句“打的跟NM要赢了一样!”，霸气十足! ##NO.20 FEN SHOU KUAI LE, ZHAO JIE SHI WO DE LE。 分手快乐，赵洁是我的了! 出自DENDI(乌克兰老司机) DENDI一直以搞怪出名，不过他所在的NAVI战队成绩却是十分傲人的!一次与LGD的比赛临近结束，NAVI战队获得胜利，DENDI当着几万人看直播的面，在公共频道打出了fen shou kuai le ,zhao jie shi wo de le !这样一句话。 要知道，赵洁当时还是LGD战队队长小8的女朋友，两人之前因为一些摩擦闹了矛盾，甚至要分手。结果DENDI竟然在比赛中来了这么一句话!当时小8就忍不住回了句SHA BI! 事后，DENDI道了歉，表示是别人教他这么说的，他也不知道什么意思。至于到底谁教的?有人说就是赵洁本人，有人说是赵洁的好友狐狸妈(430前女友)，至于到底是谁?笑笑就好~~ ##NO.21 最多55开! 出自LONGDD 我们都知道，55开用来形容双方形势差不多，比赛难以预料，旗鼓相当。 可是DOTA比赛上出现真正55开的局面并不很多见，于是，当局面一边倒的时候，为了稳定观众情绪，活跃气氛，使比赛充满悬念，著名相声演员LONGDD只能强行55开了! 某比赛，20分钟出头，比分已经26比3，劣势方外塔掉光，只能高地打麻将。 狗哥：“龙神，你说现在这个局面，几几开，给我们分析分析?” LONGDD思索了一下：“最多55开，不能再多了!” 狗哥：“这还55开啊?真的假的?” LONGDD：“强行55开，不能再多了!”","raw":null,"content":null,"categories":[],"tags":[{"name":"DOTA","slug":"DOTA","permalink":"http://yoursite.com/tags/DOTA/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-04-12T11:46:46.162Z","updated":"2016-04-12T11:46:46.162Z","comments":true,"path":"2016/04/12/hello-world/","link":"","permalink":"http://yoursite.com/2016/04/12/hello-world/","excerpt":"","keywords":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","raw":null,"content":null,"categories":[],"tags":[]}]}